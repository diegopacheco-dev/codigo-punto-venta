{"version":3,"sources":["context/auth/authContext.js","services/firebaseConfig.js","context/auth/authState.js","modules/admin/screens/dashboard/AdminDashboardScreen.js","services/pedidosService.js","modules/admin/screens/pedidos/AdminPedidosScreen.js","modules/admin/components/AdminHeader.js","modules/admin/screens/verPedido/AdminVerPedidoScreen.js","modules/admin/AdminRouter.js","modules/auth/screens/login/AuthLoginScreen.js","modules/auth/screens/register/AuthRegisterScreen.js","modules/auth/AuthRouter.js","context/posContext/posContext.js","context/posContext/posReducer.js","context/posContext/posState.js","assets/img/logo.svg","assets/img/search.svg","modules/pos/screens/pedido/components/PosHeader.js","assets/img/plato_blanco.svg","services/categoriaService.js","modules/pos/screens/pedido/components/PosCategorias.js","services/mesaServices.js","modules/pos/screens/pedido/components/PosMesas.js","modules/pos/screens/pedido/components/PosPlato.js","modules/pos/screens/pedido/components/PosPlatos.js","modules/pos/screens/pedido/components/PosComandaItem.js","modules/pos/screens/pedido/components/PosModalBoleta.js","modules/pos/screens/pedido/components/PosComanda.js","modules/pos/screens/pedido/PosPedidoScreen.js","modules/pos/PosRouter.js","Private.js","App.js","index.js"],"names":["AuthContext","createContext","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","AuthState","children","useState","isAuthenticated","usu_nom","usu_email","usu_id","token","cargando","setAuth","useEffect","authFirebase","onAuthStateChanged","objUser","console","log","displayName","email","uid","Provider","value","iniciarSesionContext","localStorage","setItem","cerrarSesion","Swal","fire","title","text","icon","showCancelButton","then","rpta","isConfirmed","signOut","AdminDashboardScreen","getPedido","a","collection","get","peticion","docs","data","map","doc","id","getPedidoById","pedido_id","mesa","postPedido","objPedido","JSON","stringify","add","AdminPedidosScreen","history","columns","label","field","sort","rows","pedido_fech","pedido_nro","pedido_est","usuario_nombre","numero_mesa","total_platos","acciones","datatable","setDatatable","filas","pedido","Usuario","usu_ape","nro","pedidoPlatos","reduce","valorAnt","objActual","pedidoPlato_cant","className","onClick","push","AdminHeader","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","role","aria-labelledby","tab-index","aria-disabled","placeholder","AdminVerPedidoScreen","props","match","params","setPedido","AdminRouter","path","component","AuthLoginScreen","useContext","password","form","setForm","handleChange","e","target","name","onSubmit","preventDefault","signInWithEmailAndPassword","user","catch","err","code","alert","for","onChange","AuthRegisterScreen","AuthRouter","PosContext","PosReducer","stateActual","action","categoria_global","mesa_global","pedidos","modal_boleta","PosState","stateLocalStorage","parse","getItem","useReducer","state","dispatch","seleccionarCategoriaGlobal","objCategoria","seleccionarMesaGlobal","objMesa","incrementarPlatoAPedido","objPlato","objPedidoActual","find","platoRepetido","platos","plato","cantidad","pedidosActualizados","estado","restarPlatoAPedido","platoPedido","plato_id","filter","length","borrarPedido","setModalBoleta","valor","PosHeader","src","logo","alt","search","to","class","getCategorias","getPlatosByCategoria","idCategoria","where","PosCategorias","categorias","setCategorias","setCargando","style","textAlign","platoIcon","cat_nom","getMesas","PosMesas","mesas","setMesas","mesa_id","mesa_nro","PosPlato","plato_img","plato_nom","plato_precio","PosPlatos","setPlatos","PosComandaItem","PosModalBoleta","referencia","useRef","Modal","show","onHide","size","Header","closeButton","Title","Body","ref","Footer","trigger","aria-hidden","content","current","PosComanda","pedidosMesaActual","moment","format","uuidv4","timer","position","PosPedidoScreen","PosRouter","Private","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aedd2d4a.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBmn7vmaGkao4Gx3x5vM5D7cDLNuTb21yc\",\r\n    authDomain: \"pos-restaurant-8e45f.firebaseapp.com\",\r\n    projectId: \"pos-restaurant-8e45f\",\r\n    storageBucket: \"pos-restaurant-8e45f.appspot.com\",\r\n    messagingSenderId: \"921793618148\",\r\n    appId: \"1:921793618148:web:66ef101d9bad1b35ac4cf1\",\r\n    measurementId: \"G-E7RXWYEQM9\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase.firestore();\r\nexport const auth = firebase.auth();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport { auth as authFirebase } from \"../../services/firebaseConfig\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AuthState = ({ children }) => {\r\n\r\n  const [auth, setAuth] = useState({\r\n    isAuthenticated: false,\r\n    usu_nom: null,\r\n    usu_email: null,\r\n    usu_id: null,\r\n    token: null,\r\n    cargando: true,\r\n  });\r\n\r\n  const iniciarSesionContext = (objUser) => {\r\n    // Guardamos la sesión en el localstorage\r\n    localStorage.setItem(\"token\", objUser.uid);\r\n    console.log(objUser);\r\n    // const payload = token.split(\".\")[1];\r\n    // const payloadDesencriptado = window.atob(payload);\r\n    // const payloadJSON = JSON.parse(payloadDesencriptado);\r\n\r\n    // Seteamos la sesion en la variable de estado\r\n    setAuth({\r\n      isAuthenticated: true,\r\n      usu_nom: objUser.displayName,\r\n      usu_email: objUser.email,\r\n      usu_id: objUser.uid,\r\n      token: objUser.uid,\r\n      cargando: false,\r\n    });\r\n  };\r\n\r\n  const iniciarSesionConFirebaseState = () => {\r\n    authFirebase.onAuthStateChanged((objUser) => {\r\n      console.log(\"Comprobando usuario con firebase state\");\r\n      if (objUser) {\r\n        // usuario logueado\r\n        console.log(\"USUARIO LOGUEADO\");\r\n        // Seteamos la sesion en la variable de estado\r\n        setAuth({\r\n          isAuthenticated: true,\r\n          usu_nom: objUser.displayName,\r\n          usu_email: objUser.email,\r\n          usu_id: objUser.uid,\r\n          token: objUser.uid,\r\n          cargando: false,\r\n        });\r\n      } else {\r\n        // Usuario no logueado\r\n        console.log(\"USUARIO SIN LOGUEAR\");\r\n        // Seteamos la sesion como null\r\n        setAuth({\r\n          isAuthenticated: false,\r\n          usu_nom: null,\r\n          usu_email: null,\r\n          usu_id: null,\r\n          token: null,\r\n          cargando: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const cerrarSesion = () => {\r\n    // Borrar la sesión del firebase state\r\n    Swal.fire({\r\n      title: \"Cerrar sesión\",\r\n      text: \"Desea cerrar sesión?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n    }).then(rpta => {\r\n        if (rpta.isConfirmed) {\r\n          authFirebase.signOut();\r\n          // history.push(\"/\")\r\n        } \r\n      });\r\n    \r\n    /**\r\n     * Al cerrar sesion con firebase state, la funcion iniciarSesionConFirebaseState\r\n     * se ejecutara y onAuthStateChanged oirá el cierre de session \r\n     * y setteara la variable de estado \"auth\" como null\r\n     */\r\n };\r\n\r\n  useEffect(() => {\r\n    iniciarSesionConFirebaseState();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        iniciarSesionContext,\r\n        isAuthenticated: auth.isAuthenticated,\r\n        usu_nom: auth.usu_nom,\r\n        usu_email: auth.usu_email,\r\n        cargando: auth.cargando,\r\n        cerrarSesion\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React from 'react'\r\n\r\nconst AdminDashboardScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Admin Dashboard</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboardScreen\r\n","import { db } from '../services/firebaseConfig';\r\n\r\n\r\nexport const getPedido = async() => {\r\n    const peticion = await db.collection('pedidos').get();\r\n    if (!peticion.docs){ \r\n        console.log(\"Error en la peticion de pedidos\");\r\n        return; \r\n    }\r\n    const data = peticion.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }))\r\n    console.log(data);\r\n    return data;\r\n}\r\n\r\nexport const getPedidoById = async(pedido_id) => {\r\n    const doc = await db.collection(\"pedidos\").doc(pedido_id).get();\r\n    if (!doc.data().mesa.id) return;\r\n    return doc.data();\r\n}\r\n\r\nexport const postPedido = async objPedido => {\r\n    console.log(JSON.stringify({...objPedido}));\r\n    const peticion = await db.collection('pedidos').add(objPedido);\r\n    return peticion;\r\n}\r\n\r\n// Si fuera POST \r\n// export const postPedido = async objPedido => {\r\n//     const peticion = await fetch(\"url/pedido\", {\r\n//         method: \"POST\",\r\n//         header: {\r\n//             \"Content-type\": \"application/json\"\r\n//         },\r\n//         body: JSON.stringify(objPedido)\r\n//     });\r\n//     const data = await peticion.json();\r\n//     return data;\r\n// }\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getPedido } from \"../../../../services/pedidosService\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nconst AdminPedidosScreen = ({history}) => {\r\n  const [datatable, setDatatable] = useState({\r\n    columns: [\r\n      { label: \"Id\", field: \"pedido_id\"},\r\n\r\n      { label: \"Fecha\", field: \"pedido_fech\"},\r\n\r\n      { label: \"Nro\", field: \"pedido_nro\"},\r\n\r\n      { label: \"Estado\", field: \"pedido_est\"},\r\n\r\n      { label: \"Usuario\", field: \"usuario_nombre\"},\r\n\r\n      { label: \"Mesa\", field: \"numero_mesa\", sort: 'asc'},\r\n\r\n      { label: \"Platos\", field: \"total_platos\"},\r\n\r\n      { label: \"Acciones\", field: \"acciones\"}\r\n    ],\r\n\r\n    rows: [\r\n        {\r\n            pedido_id: \"1\",\r\n            pedido_fech: \"2\",\r\n            pedido_nro: \"3\",\r\n            pedido_est: \"4\",\r\n            usuario_nombre: \"5\",\r\n            numero_mesa: \"6\",\r\n            total_platos: \"7\",\r\n            acciones: <><button>Hola</button></>\r\n        },\r\n\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Traemos los pedidos\r\n    getPedido().then(data => {\r\n        \r\n        // Armamos un arreglo que tendrá las filas de las tablas con los datos de los pedidos\r\n        const filas = data.map(pedido => ({\r\n            pedido_id:pedido.id,\r\n            pedido_fech: pedido.pedido_fech,\r\n            pedido_nro:pedido.pedido_nro,\r\n            pedido_est:pedido.pedido_est,\r\n            usuario_nombre:pedido.Usuario?.usu_nom + pedido.Usuario?.usu_ape,\r\n            numero_mesa: pedido.mesa?.nro,\r\n            total_platos: pedido.pedidoPlatos.reduce((valorAnt, objActual)=> {\r\n                return valorAnt + +objActual.pedidoPlato_cant;\r\n            }, 0),\r\n            acciones: <button className=\"btn btn-dark\" onClick={() => history.push(`/admin/pedidos/${pedido.id}`)}>\r\n                Ver Pedido\r\n            </button>\r\n        }))\r\n\r\n        // Insertamos el array con las filas armadas, dentro de la propiedad rows de la variable de estado \"datatable\"\r\n        setDatatable({\r\n            ...datatable,\r\n            rows: filas\r\n        })\r\n    })\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4 text-center\">Lista de Pedidos</h1>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n              <MDBDataTableV5 data={datatable}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AdminPedidosScreen;\r\n","import React from \"react\";\r\n\r\nconst AdminHeader = () => {\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Navbar\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"!#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"!#\">\r\n                  Link\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"!#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"!#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className=\"nav-link disabled\"\r\n                  href=\"!#\"\r\n                  tab-index=\"-1\"\r\n                  aria-disabled=\"true\"\r\n                >\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { getPedidoById } from \"../../../../services/pedidosService\";\r\n\r\nconst AdminVerPedidoScreen = (props) => {\r\n  let pedido_id = props.match.params.pedido_id;\r\n  const [pedido, setPedido] = useState({});\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getPedidoById(pedido_id).then((data) => {\r\n      console.log(data);\r\n      setPedido(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Información del Pedido</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-5\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"card-text\">\r\n                    <p>\r\n                      <strong>Pedido Id:</strong> &nbsp; {pedido_id}\r\n                    </p>\r\n                    <p><strong>Usuario: </strong> &nbsp; Diego Pacheco</p>\r\n                    <p>\r\n                        <strong>Estado del pedido: </strong> &nbsp; \r\n                        {\r\n                            pedido.pedido_est == \"pagado\" ?\r\n                            <span className=\"badge bg-success\">Pagado</span>\r\n                            : \r\n                            <span className=\"badge bg-primary\">pendiente</span>\r\n                        }\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6 text-end\">\r\n                  <p>\r\n                    <strong>Fecha: </strong> &nbsp; {pedido.pedido_fech}\r\n                  </p>\r\n                <p>\r\n                    <strong>Número de mesa: </strong> &nbsp; {pedido.mesa?.id}\r\n                </p>\r\n                <p>\r\n                    <strong>Número de pedido:</strong> &nbsp; {pedido.pedido_nro}\r\n                </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">Lista de platos</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AdminVerPedidoScreen;\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport AdminDashboardScreen from './screens/dashboard/AdminDashboardScreen'\r\nimport AdminPedidosScreen from './screens/pedidos/AdminPedidosScreen'\r\nimport AdminHeader from './components/AdminHeader'\r\nimport AdminVerPedidoScreen from './screens/verPedido/AdminVerPedidoScreen'\r\n\r\nconst AdminRouter = () => {\r\n    return (\r\n        <>\r\n\r\n        <AdminHeader />\r\n\r\n        <Switch>\r\n\r\n            <Route path=\"/admin/dashboard\" component={AdminDashboardScreen} />\r\n            <Route path=\"/admin/pedidos/:pedido_id\" component={AdminVerPedidoScreen}/> \r\n            <Route path=\"/admin/pedidos\" component={AdminPedidosScreen}/>\r\n\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminRouter\r\n","import React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport AuthContext from \"../../../../context/auth/authContext\";\r\nimport { postLogin } from \"../../../../services/authService\";\r\nimport { auth } from \"../../../../services/firebaseConfig\";\r\nimport \"../../../../styles/login.css\";\r\n\r\n\r\nconst AuthLoginScreen = (props) => {\r\n\r\n    const {iniciarSesionContext} = useContext(AuthContext)\r\n\r\n\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        // TODO: Aplicar validación\r\n        auth.signInWithEmailAndPassword(form.email, form.password).then(rpta => {\r\n          if (rpta.user) {\r\n            // login exitoso\r\n            iniciarSesionContext(rpta.user);\r\n            props.history.push(\"/pos/pedido\");\r\n          }\r\n        }).catch(err => {\r\n          switch (err.code) {\r\n            case \"auth/wrong-password\": \r\n              alert(\"La contraseña es incorrecta o el usuario no existe\");\r\n              console.log(err);\r\n              break;\r\n            default: \r\n              console.log(err)\r\n          }\r\n        })\r\n          \r\n\r\n\r\n    }\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Inicio de Sesión</h1>\r\n        <form className=\"formulario\" onSubmit={handleSubmit}>\r\n          <label for=\"\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n          />\r\n          <label for=\"\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Iniciar Sesión\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AuthLoginScreen;\r\n","import React from 'react'\r\n\r\nconst AuthRegisterScreen = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRegisterScreen\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport AuthLoginScreen from './screens/login/AuthLoginScreen'\r\nimport AuthRegisterScreen from './screens/register/AuthRegisterScreen'\r\n\r\n\r\n\r\n\r\nconst AuthRouter = () => {\r\n\r\n    return (\r\n       <>\r\n        <Switch>\r\n            <Route path=\"/auth/login\" component={AuthLoginScreen} />\r\n            <Route path=\"/auth/register\" component={AuthRegisterScreen} />\r\n        </Switch>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","import { createContext } from 'react';\r\n\r\nconst PosContext = createContext();\r\n\r\nexport default PosContext;","const PosReducer = (stateActual, action) => {\r\n  \r\n\r\n  if (action.type === \"SELECCIONAR_CATEGORIA\"){\r\n  \r\n\r\n    localStorage.setItem('state', JSON.stringify({...stateActual, categoria_global: action.data}))\r\n    return {\r\n      ...stateActual,\r\n      categoria_global: action.data\r\n    }\r\n  }\r\n\r\n  if (action.type === \"SELECCIONAR_MESA\") {\r\n    localStorage.setItem('state', JSON.stringify({...stateActual, mesa_global: action.data}))\r\n    return {\r\n      ...stateActual, \r\n      mesa_global: action.data\r\n    }\r\n  }\r\n\r\n  if (action.type === \"ACTUALIZAR_PEDIDOS\") {\r\n    localStorage.setItem('state', JSON.stringify({...stateActual, pedidos: action.data}));\r\n    return {\r\n      ...stateActual,\r\n      pedidos: action.data\r\n    }\r\n  }\r\n\r\n  if (action.type === \"MODAL_BOLETA\") {\r\n    localStorage.setItem('state', JSON.stringify({...stateActual, modal_boleta: action.data}))\r\n    return {\r\n      ...stateActual,\r\n      modal_boleta: action.data\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return { ...stateActual}\r\n}\r\n\r\nexport default PosReducer;","import React, { useReducer, useState, useEffect } from \"react\";\r\nimport PosContext from \"./posContext\";\r\nimport PosReducer from \"./posReducer\";\r\n\r\nconst PosState = ({ children }) => {\r\n  // verificar si el estado esta almacenado en el local storage\r\n  let stateNull = {\r\n    categoria_global: null,\r\n    mesa_global: null,\r\n    pedidos: [],\r\n    modal_boleta: false\r\n  };\r\n\r\n  let stateLocalStorage = JSON.parse(localStorage.getItem(\"state\"));\r\n\r\n  const [state, dispatch] = useReducer(\r\n    PosReducer,\r\n    stateLocalStorage ? stateLocalStorage : stateNull\r\n  );\r\n\r\n  const setModalBoleta = (valor) => {\r\n      dispatch({\r\n          type: \"MODAL_BOLETA\",\r\n          data: valor\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const borrarPedido = () => {\r\n    // Sacamos una copia de pedidos y mesa_global del state\r\n    let { pedidos, mesa_global } = state;\r\n    // Filtramos los pedidos sin incluir el pedido actual, que ya fue pagado\r\n    pedidos = pedidos.filter(pedido => pedido.objMesa.id !== mesa_global.id)\r\n    dispatch({\r\n        type: \"ACTUALIZAR_PEDIDOS\",\r\n        data: pedidos\r\n    })\r\n\r\n  }\r\n\r\n  const incrementarPlatoAPedido = (objPlato) => {\r\n    // sacamos una copia del state\r\n    let { pedidos, mesa_global } = state;\r\n\r\n    if (!state.mesa_global) return;\r\n\r\n    // Buscamos si la mesaActual ya tiene pedidos relacionados\r\n    let objPedidoActual = pedidos.find(\r\n      (objPedido) => objPedido.objMesa.id === mesa_global.id\r\n    );\r\n\r\n    if (objPedidoActual) {\r\n      // Significa que la mesa_global actual, ya tiene pedidos relacionados a esta\r\n\r\n      // Buscamos si el plato a agregar ya se encuentra en la mesa, caso contrario agregarlo al array de platos del pedido de la mesa actual\r\n      let platoRepetido = objPedidoActual.platos.find(\r\n        (plato) => plato.id === objPlato.id\r\n      );\r\n\r\n      if (platoRepetido) {\r\n        // Si es un plato repetido\r\n        // Actualizamos el arreglo que contiene los platos\r\n        // let platosActualizados = objPedidoActual.platos.map(plato => {\r\n        //     // Recorremos todos los platos, buscando el plato repetido\r\n        //     // Una vez que encontremos el plato, actualizamos su cantidad\r\n        //     // Para los demas platos, solo los devolvemos tal cual estan\r\n        //     if (plato.id === platoRepetido.id){\r\n        //         return {\r\n        //             ...plato,\r\n        //             cantidad: platoRepetido.cantidad + 1\r\n        //         }\r\n\r\n        //     } else {\r\n        //         return plato;\r\n        //     }\r\n        // })\r\n\r\n        // // Actualizamos el obj Pedido de la mesa actual\r\n        // // con el nuevo arreglo de platos actualizados\r\n        // let pedidoActualizado = {\r\n        //     ...objPedidoActual,\r\n        //     platos: platosActualizados,\r\n        // }\r\n\r\n        // // Ahora debemos generar un arreglo con los pedidos globales actualizados\r\n        // // Recorremos el arreglo de pedidos globales\r\n        // let pedidosActualizados = pedidos.map(pedido => {\r\n        //     // Encontramos el pedido desactualizado de la mesa actual\r\n        //     // y lo reemplazamos por el pedido actualizado de la mesa actual\r\n        //     if (pedido.objMesa.id === pedidoActualizado.objMesa.id) {\r\n        //         return pedidoActualizado;\r\n        //     } else {\r\n        //         // Los pedidos de otras mesas simplemente los retornamos\r\n        //         return pedido;\r\n        //     }\r\n        // })\r\n\r\n        // Mandamos el nuevo array con los pedidos globales actualizados al dispatch\r\n        // para que se actualize el estado global\r\n        platoRepetido.cantidad += 1;\r\n\r\n        dispatch({\r\n          type: \"ACTUALIZAR_PEDIDOS\",\r\n          // data: pedidosActualizados\r\n          data: pedidos,\r\n        });\r\n      } else {\r\n        // En caso la mesa actual ya tenga pedidos y queremos agregar un plato nuevo\r\n        // Insertamos el obj plato dentro del arreglo platos del pedido actual\r\n        objPedidoActual.platos.push({\r\n          ...objPlato,\r\n          cantidad: 1,\r\n        });\r\n\r\n        // Generamos un nuevo arreglo con todos los pedidos de todas las mesas actualizados\r\n        let pedidosActualizados = pedidos.map((pedido) => {\r\n          // Encontramos el antiguo pedido de la mesa actual y lo reemplazamos por el pedido actualizado\r\n          if (pedido.objMesa.id === objPedidoActual.objMesa.id) {\r\n            return objPedidoActual;\r\n          } else {\r\n            return pedido;\r\n          }\r\n        });\r\n\r\n        // Por ultimos mandamos el nuevo arreglo actualizado al dispatch para actualizar el estado global\r\n        dispatch({\r\n          type: \"ACTUALIZAR_PEDIDOS\",\r\n          data: pedidosActualizados,\r\n        });\r\n      }\r\n    } else {\r\n      // significa que la mesa_global actual, esta vacia, no tiene ningún pedido\r\n      // agregamos el pedido de la mesa actual con su primer plato\r\n\r\n      pedidos.push({\r\n        estado: \"pendiente\",\r\n        objMesa: {\r\n          ...mesa_global,\r\n        },\r\n        platos: [\r\n          {\r\n            ...objPlato,\r\n            cantidad: 1,\r\n          },\r\n        ],\r\n      });\r\n\r\n      // Entonces actualizamos el state global\r\n      dispatch({\r\n        type: \"ACTUALIZAR_PEDIDOS\",\r\n        data: pedidos,\r\n      });\r\n    }\r\n\r\n    // 1. Si la mesas estaba vacia, y es el primer plato del pedido\r\n    // 2. Si la mesa tenia un pedido pero no tenía el plato actual, y vamos a\r\n    // a crear el primer plato de este tipo\r\n\r\n    // 3. Si la mesa tenia un pedido y tenía un plato de ese tipo en el\r\n    // pedido, para incrementar la cantidad de platos en ese pedido\r\n  };\r\n\r\n  const restarPlatoAPedido = (objPlato) => {\r\n    let { pedidos, mesa_global } = state;\r\n    if (!mesa_global) return;\r\n\r\n    // objPedidoActual es una referencia a un pedido que esta dentro del arrary pedidos\r\n    // pudiendo así modificar el pedido dentro del array pedidos\r\n    let objPedidoActual = pedidos.find(\r\n      (objPedido) => objPedido.objMesa.id === mesa_global.id\r\n    );\r\n\r\n    if (objPedidoActual) {\r\n      // Ya existe un pedido en la mesa\r\n      let platoPedido = objPedidoActual.platos.find(\r\n        (plato) => plato.plato_id === objPlato.plato_id\r\n      );\r\n\r\n      if (platoPedido) {\r\n        platoPedido.cantidad -= 1;\r\n\r\n        if (platoPedido.cantidad === 0) {\r\n          objPedidoActual.platos = objPedidoActual.platos.filter(\r\n            (plato) => plato.plato_id !== objPlato.plato_id\r\n          );\r\n          if (objPedidoActual.platos.length === 0) {\r\n            pedidos = pedidos.filter(\r\n              (pedido) => objPedidoActual.objMesa.id !== mesa_global.id\r\n            );\r\n          }\r\n        }\r\n\r\n        dispatch({\r\n          type: \"ACTUALIZAR_PEDIDOS\",\r\n          data: pedidos,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const seleccionarCategoriaGlobal = (objCategoria) => {\r\n    // Intentar seleccionar o settear categoria global\r\n\r\n    dispatch({\r\n      data: objCategoria,\r\n      type: \"SELECCIONAR_CATEGORIA\",\r\n    });\r\n  };\r\n\r\n  const seleccionarMesaGlobal = (objMesa) => {\r\n    dispatch({\r\n      data: objMesa,\r\n      type: \"SELECCIONAR_MESA\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PosContext.Provider\r\n      value={{\r\n        seleccionarCategoriaGlobal,\r\n        seleccionarMesaGlobal: seleccionarMesaGlobal,\r\n        categoria_global: state.categoria_global,\r\n        mesa_global: state.mesa_global,\r\n        incrementarPlatoAPedido,\r\n        pedidos: state.pedidos,\r\n        restarPlatoAPedido,\r\n        borrarPedido,\r\n        modal_boleta: state.modal_boleta, \r\n        setModalBoleta\r\n      }}\r\n    >\r\n      {children}\r\n    </PosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PosState;\r\n","export default __webpack_public_path__ + \"static/media/logo.32d5c4da.svg\";","export default __webpack_public_path__ + \"static/media/search.c031f9ef.svg\";","import React, { useContext } from \"react\";\r\nimport logo from \"../../../../../assets/img/logo.svg\";\r\nimport search from \"../../../../../assets/img/search.svg\";\r\nimport AuthContext from \"../../../../../context/auth/authContext\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PosHeader = () => {\r\n  const { usu_nom, usu_email, cerrarSesion } = useContext(AuthContext);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <img src={logo} alt=\"\" />\r\n        {console.log(logo)}\r\n      </div>\r\n      <div className=\"header__buscador\">\r\n        <img src={search} alt=\"\" />\r\n        <input\r\n          type=\"text\"\r\n          className=\"header__input\"\r\n          placeholder=\"Busca un término\"\r\n        />\r\n      </div>\r\n      <div className=\"header__usuario me-5\">\r\n        <Link className=\"btn btn-success me-2\" to=\"/admin/dashboard\">\r\n          Ir a admin\r\n        </Link>\r\n        <button \r\n        onClick={cerrarSesion}\r\n        className=\"btn btn-danger me-4\"><i class=\"fas fa-door-open\"></i>Salir</button>\r\n        <img className=\"me-3\" src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span className=\"me-5\">{usu_nom || usu_email}</span>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PosHeader;\r\n","export default __webpack_public_path__ + \"static/media/plato_blanco.255e60bc.svg\";","import { db } from \"./firebaseConfig\";\r\n\r\n\r\n\r\nexport const getCategorias = async () => {\r\n    // nos conectamos a firestore con un get\r\n    \r\n    // 1era Forma \r\n    // db.collection('categorias').get().then((snapshot) => {\r\n    //     // accedemos a los documentos con el método docs\r\n    //     // mapeamos el arreglo de documentos\r\n    //     const data = snapshot.docs.map(doc => ({\r\n    //         // armamos un objeto con el id y el resto de campos (usando el método .data())\r\n    //         id: doc.id,\r\n    //         ...doc.data(),\r\n    //     }))\r\n    //     return data;\r\n    // })\r\n\r\n    const peticion = await db.collection('categorias').get();\r\n\r\n    if (!peticion.docs){\r\n        alert(\"Error al consultar categorias\")\r\n        return;\r\n    }\r\n\r\n    const data = peticion.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }))\r\n    console.log('categorias');\r\n    console.log(data);\r\n    return data\r\n\r\n\r\n}\r\n\r\n\r\nexport const getPlatosByCategoria = async (idCategoria) => {\r\n    const peticion = await db.collection('platos').where(\"categoria_id\", '==', idCategoria).get();\r\n    if(!peticion.docs) {\r\n        alert(\"Error al traer los platos por categoria\");\r\n        return;\r\n    }\r\n    const data = peticion.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }))\r\n\r\n    return data;\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport platoIcon from \"../../../../../assets/img/plato_blanco.svg\";\r\nimport PosContext from \"../../../../../context/posContext/posContext\";\r\nimport { getCategorias } from \"../../../../../services/categoriaService\";\r\n\r\n\r\n\r\nconst PosCategorias = () => {\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n  const { seleccionarCategoriaGlobal, categoria_global } = useContext(PosContext);\r\n\r\n  useEffect(() => {\r\n\r\n    setCargando(true);\r\n\r\n\r\n    getCategorias().then(data => {\r\n      setCategorias(data);\r\n      setCargando(false);\r\n    })\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__lista\">\r\n        {cargando ? (\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          categorias.map((objCategoria) => {\r\n            return (\r\n              // <li className=\"active\">\r\n              <li style={{ textAlign: \"center\" }} \r\n              key={objCategoria.id}\r\n              className={\r\n                  objCategoria.id === categoria_global?.id ? \"active\" : \"\"\r\n                \r\n                }\r\n              onClick={() => {\r\n                  seleccionarCategoriaGlobal(objCategoria);\r\n              }} >\r\n                <img src={platoIcon} alt=\"\" />\r\n                <span>{objCategoria.cat_nom}</span>\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default PosCategorias;\r\n","import { db } from \"./firebaseConfig\"\r\n\r\n\r\n\r\nexport const getMesas = async() => {\r\n    const peticion = await db.collection('mesa').get();\r\n\r\n    if (!peticion.docs) {\r\n        alert(\"Error al consultar mesas\");\r\n        return;\r\n    }\r\n\r\n    const data = peticion.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n    }))\r\n\r\n    return data;\r\n}","import React, { useEffect, useState, useContext } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext/posContext\";\r\nimport { getMesas } from \"../../../../../services/mesaServices\";\r\n\r\nconst PosMesas = () => {\r\n  const [mesas, setMesas] = useState([]);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const { seleccionarMesaGlobal, mesa_global } = useContext(PosContext);\r\n  // const {seleccionarMesaGlobal, mesa_global_id} = useContext(PosState)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setCargando(true);\r\n    \r\n    getMesas().then(data => {\r\n      console.log(\"Mesas\");\r\n      console.log(data);\r\n      setMesas(data);\r\n      setCargando(false)\r\n    });\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mesas\">\r\n      <ul className=\"mesas__lista\">\r\n        {cargando ? (\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          mesas?.map((objMesa) => {\r\n            return (\r\n              <li key={objMesa.id}\r\n              className={ mesa_global?.mesa_id === objMesa.id ? \"mesas__mesa active\" : \"mesas__mesa\" }\r\n              onClick={() => seleccionarMesaGlobal(objMesa)}\r\n              >\r\n                <span className=\"mesas__titulo\">Mesa</span>\r\n                <span className=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n      <div className=\"mesas__info\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosMesas;\r\n","import React, { useContext } from 'react'\r\nimport PosContext from '../../../../../context/posContext/posContext';\r\n\r\nconst PosPlato = ({objPlato}) => {\r\n\r\n    const { incrementarPlatoAPedido, restarPlatoAPedido} = useContext(PosContext);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"carta__plato\">\r\n        <img\r\n        //   src={objPlato.plato_img}\r\n          src={objPlato.plato_img}\r\n          alt=\"\"\r\n        />\r\n        {/* El titulo debe consumir el titulo de objPlato */}\r\n        <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n        <span className=\"carta__precio\">{objPlato.plato_precio}</span>\r\n        <div className=\"carta__botones\">\r\n          <button className=\"boton boton-outline-primary boton-restar\"\r\n          onClick={() => restarPlatoAPedido(objPlato)}\r\n          >\r\n            -1\r\n          </button>\r\n          <button className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => incrementarPlatoAPedido(objPlato)}\r\n          >\r\n            +1\r\n          </button>\r\n        </div>\r\n      </div>\r\n   \r\n    )\r\n}\r\n\r\nexport default PosPlato\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext/posContext\";\r\nimport { getPlatosByCategoria } from \"../../../../../services/categoriaService\";\r\nimport PosPlato from \"./PosPlato\";\r\n\r\nconst PosPlatos = () => {\r\n  \r\n  const { categoria_global } = useContext(PosContext);\r\n\r\n  const [platos, setPlatos] = useState([])\r\n\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  \r\n  useEffect(() => {\r\n    setCargando(true);\r\n\r\n    // obtener platos con los servicios \r\n    // setear el arreglo platos con la data traida\r\n    if (categoria_global) {\r\n      getPlatosByCategoria(categoria_global.id).then(data => {\r\n        console.log(\"Platos por categoria\");\r\n        console.log(data);\r\n        setPlatos(data);\r\n        setCargando(false);\r\n      });\r\n      \r\n    }\r\n\r\n\r\n  }, [categoria_global]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"carta__platos\">\r\n\r\n      {\r\n        categoria_global ? \r\n        cargando ?\r\n          <div className=\"text-light\" >Cargando...</div>\r\n        : \r\n        (\r\n          platos.map(objPlato => {\r\n            return <PosPlato objPlato={objPlato} key={objPlato.id} />\r\n          })  \r\n        )      \r\n        :\r\n        <h4 class=\"text-light mt-5\">Ninguna categoria ha sido seleccionada</h4>\r\n      }\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PosPlatos;\r\n","import React from \"react\";\r\n\r\nconst PosComandaItem = ( { plato } ) => {\r\n  return (\r\n    <li className=\"comanda__item\">\r\n      <p className=\"comanda__nombre\">\r\n        <span>\r\n          <strong>{plato.plato_nom}</strong>\r\n        </span>\r\n        <span>S/{plato.plato_precio}</span>\r\n      </p>\r\n      <p className=\"comanda__cantidad\">{plato.cantidad}</p>\r\n      <p className=\"comanda__precio\">\r\n        <strong>S/{+plato.plato_precio * +plato.cantidad}</strong>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PosComandaItem;\r\n","import React from \"react\";\r\nimport { useContext, useRef } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PosContext from \"../../../../../context/posContext/posContext\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nconst PosModalBoleta = () => {\r\n  const referencia = useRef();\r\n  const { modal_boleta, setModalBoleta, borrarPedido } = useContext(PosContext);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={modal_boleta} onHide={() => {\r\n          setModalBoleta(false);\r\n          borrarPedido();\r\n      }} size=\"xl\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"container\" ref={referencia}>\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body p-0\">\r\n                    <div className=\"row p-5\">\r\n                      <div className=\"col-xl-6\">\r\n                        <img src=\"http://via.placeholder.com/400x90?text=logo\" />\r\n                      </div>\r\n\r\n                      <div className=\"col-xl-6 text-right\">\r\n                        <p className=\"font-weight-bold mb-1\">Invoice #550</p>\r\n                        <p className=\"text-muted\">Due to: 4 Dec, 2019</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <hr className=\"my-5\" />\r\n\r\n                    <div className=\"row pb-5 p-5\">\r\n                      <div className=\"col-md-6\">\r\n                        <p className=\"font-weight-bold mb-4\">\r\n                          Client Information\r\n                        </p>\r\n                        <p className=\"mb-1\">John Doe, Mrs Emma Downson</p>\r\n                        <p>Acme Inc</p>\r\n                        <p className=\"mb-1\">Berlin, Germany</p>\r\n                        <p className=\"mb-1\">6781 45P</p>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6 text-right\">\r\n                        <p className=\"font-weight-bold mb-4\">Payment Details</p>\r\n                        <p className=\"mb-1\">\r\n                          <span className=\"text-muted\">VAT: </span> 1425782\r\n                        </p>\r\n                        <p className=\"mb-1\">\r\n                          <span className=\"text-muted\">VAT ID: </span> 10253642\r\n                        </p>\r\n                        <p className=\"mb-1\">\r\n                          <span className=\"text-muted\">Payment Type: </span>{\" \"}\r\n                          Root\r\n                        </p>\r\n                        <p className=\"mb-1\">\r\n                          <span className=\"text-muted\">Name: </span> John Doe\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row p-5\">\r\n                      <div className=\"col-md-12\">\r\n                        <table className=\"table\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"border-0 text-uppercase small font-weight-bold\">\r\n                                ID\r\n                              </th>\r\n                              <th className=\"border-0 text-uppercase small font-weight-bold\">\r\n                                Item\r\n                              </th>\r\n                              <th className=\"border-0 text-uppercase small font-weight-bold\">\r\n                                Description\r\n                              </th>\r\n                              <th className=\"border-0 text-uppercase small font-weight-bold\">\r\n                                Quantity\r\n                              </th>\r\n                              <th className=\"border-0 text-uppercase small font-weight-bold\">\r\n                                Unit Cost\r\n                              </th>\r\n                              <th className=\"border-0 text-uppercase small font-weight-bold\">\r\n                                Total\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>1</td>\r\n                              <td>Software</td>\r\n                              <td>LTS Versions</td>\r\n                              <td>21</td>\r\n                              <td>$321</td>\r\n                              <td>$3452</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>1</td>\r\n                              <td>Software</td>\r\n                              <td>Support</td>\r\n                              <td>234</td>\r\n                              <td>$6356</td>\r\n                              <td>$23423</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>1</td>\r\n                              <td>Software</td>\r\n                              <td>Sofware Collection</td>\r\n                              <td>4534</td>\r\n                              <td>$354</td>\r\n                              <td>$23434</td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row-reverse bg-dark text-white p-4\">\r\n                      <div className=\"py-3 px-5 text-right\">\r\n                        <div className=\"mb-2\">Grand Total</div>\r\n                        <div className=\"h2 font-weight-light\">$234,234</div>\r\n                      </div>\r\n\r\n                      <div className=\"py-3 px-5 text-right\">\r\n                        <div className=\"mb-2\">Discount</div>\r\n                        <div className=\"h2 font-weight-light\">10%</div>\r\n                      </div>\r\n\r\n                      <div className=\"py-3 px-5 text-right\">\r\n                        <div className=\"mb-2\">Sub - Total amount</div>\r\n                        <div className=\"h2 font-weight-light\">$32,432</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-light mt-5 mb-5 text-center small\">\r\n              by :{\" \"}\r\n              <a\r\n                className=\"text-light\"\r\n                target=\"!_blank\"\r\n                href=\"http://totoprayogo.com\"\r\n              >\r\n                totoprayogo.com\r\n              </a>\r\n              ñ\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          \r\n              <ReactToPrint\r\n              // trigger recibe un componente que será el activador\r\n                trigger={() => {\r\n                  return <button className=\"btn btn-dark\">\r\n                    <i className=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n                  </button>;\r\n                }}\r\n\r\n                // content recibe la referencia del componente que se imprimirá\r\n                content={() => {\r\n                    return referencia.current;\r\n                }}\r\n              />;\r\n          \r\n          <button className=\"btn btn-danger\"\r\n          onClick={()=> console.log(referencia)}\r\n          >Cerrar</button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PosModalBoleta;\r\n","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext/posContext\";\r\nimport { postPedido } from \"../../../../../services/pedidosService\";\r\nimport PosComandaItem from \"./PosComandaItem\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Swal from \"sweetalert2\";\r\nimport PosModalBoleta from \"./PosModalBoleta\";\r\n\r\nconst PosComanda = () => {\r\n  const { pedidos, mesa_global, borrarPedido, modal_boleta, setModalBoleta } =\r\n    useContext(PosContext);\r\n  let pedidosMesaActual = null;\r\n\r\n  if (mesa_global) {\r\n    pedidosMesaActual = pedidos.find(\r\n      (pedido) =>\r\n        pedido.objMesa.id === mesa_global.id && pedido.estado === \"pendiente\"\r\n    );\r\n  }\r\n\r\n  const pagar = () => {\r\n    Swal.fire({\r\n      title: \"Pagar el pedido?\",\r\n      text: \"Confirme que está cancelando el total del pedido\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n    }).then((rpta) => {\r\n      if (rpta.isConfirmed) {\r\n        // Buscamos el pedido actual de la mesa actual\r\n        let pedidosActual = pedidos.find(\r\n          (pedido) => pedido.objMesa.id === mesa_global.id\r\n        );\r\n\r\n        // Generamos un nuevo array con los platos del pedido\r\n        let platos = pedidosActual.platos.map((plato) => {\r\n          return {\r\n            plato_id: plato.id,\r\n            pedidoPlato_cant: plato.cantidad,\r\n          };\r\n        });\r\n\r\n        // Armamos el objPedido que irá al backend mediante el servicio\r\n        let objPedido = {\r\n          pedido_fech: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n          pedido_nro: uuidv4(),\r\n          pedido_est: \"pagado\",\r\n          usu_id: 2,\r\n          mesa: {\r\n            id: mesa_global.id,\r\n            nro: mesa_global.mesa_nro,\r\n          },\r\n          pedidoPlatos: platos,\r\n        };\r\n        // Enviamos el objPedido armado al backend\r\n        postPedido(objPedido).then((data) => {\r\n          console.log(\"Pedido creado con exito\");\r\n          console.log(data);\r\n          if (data.id) {\r\n            // TO-DO: Borrar el pedido de la mesa actual\r\n            Swal.fire({\r\n              title: \"Hecho!\",\r\n              text: \"Pedido registrado en la base de datos\",\r\n              icon: \"success\",\r\n              timer: 700,\r\n              position: \"top-right\",\r\n            });\r\n            setModalBoleta(true);        \r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"comanda\">\r\n      <h4 className=\"comanda__mesa\">\r\n        {mesa_global ? `Mesa ${mesa_global.mesa_nro}` : \"Seleccione mesa\"}\r\n      </h4>\r\n      <p className=\"comanda__usuario\">Carlos Jimenez</p>\r\n      <hr />\r\n\r\n      {!mesa_global ? (\r\n        <div>Seleccione una mesa</div>\r\n      ) : pedidosMesaActual ? (\r\n        <>\r\n          <ul className=\"comanda__lista\">\r\n            {pedidosMesaActual.platos.map((plato) => {\r\n              return <PosComandaItem plato={plato} key={plato.id} />;\r\n            })}\r\n          </ul>\r\n          <button className=\"boton boton-success boton-block\" onClick={pagar}>\r\n            PAGAR\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div>Mesa sin pedidos</div>\r\n      )}\r\n      <PosModalBoleta />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosComanda;\r\n","import React, { useContext } from \"react\";\r\nimport PosHeader from \"./components/PosHeader\";\r\nimport PosCategorias from \"./components/PosCategorias\";\r\nimport PosMesas from \"./components/PosMesas\";\r\nimport PosPlatos from \"./components/PosPlatos\";\r\nimport PosComanda from \"./components/PosComanda\";\r\nimport PosContext from \"../../../../context/posContext/posContext\";\r\n\r\nconst PosPedidoScreen = () => {\r\n\r\n  const {categoria_global, mesa_global} = useContext(PosContext)\r\n\r\n  console.log(categoria_global?.cat_nom);\r\n\r\n  return (\r\n    <>\r\n      <PosHeader />\r\n\r\n      <main className=\"pos-container\">\r\n        <PosCategorias />\r\n\r\n        <section className=\"tabla\">\r\n          <PosMesas />\r\n\r\n          <div className=\"pedido\">\r\n            <div className=\"carta\">\r\n              <h3>\r\n                Lista de Platos Categoria: &nbsp;{\"\"}\r\n                <span className=\"color-secundario\">{categoria_global?.cat_nom || \"Seleccione la categoria\"}</span>\r\n              </h3>\r\n\r\n              <PosPlatos />\r\n            </div>\r\n            <div className=\"boleta\">\r\n              <h3>\r\n                Pedido Mesa: &nbsp;<span className=\"color-secundario\">{mesa_global?.mesa_nro}</span>\r\n              </h3>\r\n              <hr />\r\n\r\n              <PosComanda />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PosPedidoScreen;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport PosState from \"../../context/posContext/posState\";\r\nimport PosPedidoScreen from \"./screens/pedido/PosPedidoScreen\";\r\n\r\nconst PosRouter = () => {\r\n  return (\r\n    <PosState>\r\n      <Switch>\r\n        <Route path=\"/pos/pedido\" component={PosPedidoScreen} />\r\n      </Switch>\r\n    </PosState>\r\n  );\r\n};\r\n\r\nexport default PosRouter;\r\n","import React, {useContext} from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport AuthContext from \"./context/auth/authContext\";\r\n\r\nconst Private = ({ path, component: Component }) => {\r\n  \r\n  const { isAuthenticated, cargando } = useContext(AuthContext);\r\n\r\n  if (cargando) {\r\n    return <div>Cargando...</div>;\r\n  } else {\r\n    return isAuthenticated ? <Route path={path} component={Component} />\r\n    :\r\n    <Redirect to=\"/auth/login\" />\r\n  }\r\n};\r\n\r\nexport default Private;\r\n","import React from \"react\";\nimport { BrowserRouter, HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport AuthState from \"./context/auth/authState\";\nimport AdminRouter from \"./modules/admin/AdminRouter\";\nimport AuthRouter from \"./modules/auth/AuthRouter\";\nimport AuthLoginScreen from \"./modules/auth/screens/login/AuthLoginScreen\";\nimport AuthRegisterScreen from \"./modules/auth/screens/register/AuthRegisterScreen\";\nimport PosRouter from \"./modules/pos/PosRouter\";\nimport Private from \"./Private\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <AuthState>\n        <Switch>\n          <Private path=\"/pos\" component={PosRouter} />\n          <Private path=\"/admin\" component={AdminRouter} />\n          <Route path=\"/auth\" component={AuthRouter} />\n          <Redirect to=\"/auth/login\"/>\n        </Switch>\n      </AuthState>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}